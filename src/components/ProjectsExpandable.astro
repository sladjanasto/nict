---
import { getUITranslations, getLangFromUrl, getPageContent } from '../utils/i18n.ts';

const { url } = Astro;
const lang = getLangFromUrl(url);
const ui = await getUITranslations(lang);
const portfolioContent = await getPageContent(lang, 'portfolio');

// Fallback content if markdown content is not available
const content = portfolioContent ? await portfolioContent.render() : null;

// Extract data to avoid complex expressions in template
const portfolioData = ui.portfolio || {};
const projects = portfolioData.projects || [];
const techCategories = portfolioData.technologyExpertise?.categories || [];
const techExpertiseData = portfolioData.technologyExpertise || {};
---

<section id="projects" class="projects section">
	<div class="container">
		<h2 class="section-title">{portfolioData.title || 'What we\'ve built'}</h2>
		<p class="projects-intro">
			{portfolioData.subtitle || 'Our work and results'}
		</p>
		
		{portfolioContent && (
			<div class="projects-markdown">
				<Fragment set:html={content?.Content} />
			</div>
		)}
		
		<div class="projects-grid" id="projectsGrid">
			{projects.map((project: any, index: number) => (
				<div class={`project-card ${index === 0 ? 'featured' : ''} ${index > 2 ? 'hidden' : ''}`} data-project-index={index}>
					<div class="project-header">
						<div class="project-meta">
							<h3>{project.title}</h3>
							<div class="project-details">
								<span class="industry">{project.industry}</span>
								<span class="position">{project.position}</span>
								<span class="duration">{project.duration}</span>
							</div>
						</div>
					</div>
					<div class="project-content">
						<div class="challenge">
							<h4>{portfolioData.challenge || 'Challenge'}:</h4>
							<p>{project.challenge}</p>
						</div>
						<div class="results">
							<h4>{portfolioData.results || 'Results'}:</h4>
							<ul class="results-list">
								{(project.results || []).map((result: string) => (
									<li>{result}</li>
								))}
							</ul>
						</div>
					</div>
				</div>
			))}
		</div>
		
		{projects.length > 3 && (
			<div class="projects-controls">
				<button class="btn btn-secondary" id="showMoreBtn">
					<span class="btn-text-show">Show More Projects</span>
					<span class="btn-text-hide" style="display: none;">Show Less</span>
				</button>
			</div>
		)}
	</div>
</section>

<style>
	.projects {
		background: var(--bg-secondary);
		padding: var(--spacing-xxl) 0;
	}
	
	.projects-intro {
		text-align: center;
		font-size: var(--font-size-lg);
		color: var(--text-muted);
		margin-bottom: var(--spacing-3xl);
		max-width: 600px;
		margin-left: auto;
		margin-right: auto;
	}
	
	.projects-markdown {
		max-width: 800px;
		margin: 0 auto var(--spacing-3xl) auto;
		text-align: center;
	}
	
	.projects-markdown :global(h2),
	.projects-markdown :global(h3) {
		font-family: var(--font-headings);
		color: #1d96d5;
		margin-bottom: var(--spacing-md);
	}
	
	.projects-markdown :global(p) {
		font-size: var(--font-size-md);
		line-height: 1.7;
		color: var(--text-muted);
		margin-bottom: var(--spacing-lg);
	}
	
	.projects-grid {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		gap: 0.5rem;
		margin-bottom: var(--spacing-3xl);
	}
	
	.project-card {
		background: var(--bg-white);
		border-radius: var(--radius-lg);
		box-shadow: var(--shadow-md);
		padding: var(--spacing-xl);
		transition: all var(--transition-normal);
		position: relative;
		overflow: hidden;
		width:25%;
	}
	
	.project-card.hidden {
		display: none;
	}
	
	.project-card:hover {
		transform: translateY(-5px);
		box-shadow: var(--shadow-xl);
	}
	
	.project-header {
		margin-bottom: var(--spacing-lg);
		padding-bottom: var(--spacing-lg);
		border-bottom: 1px solid var(--border-light);
	}
	
	.project-meta h3 {
		font-family: var(--font-headings);
		font-size: var(--font-size-xl);
		font-weight: 600;
		color: #1d96d5;
		margin: 0 0 var(--spacing-sm) 0;
		line-height: 1.3;
	}
	
	.project-details {
		display: flex;
		flex-wrap: wrap;
		gap: var(--spacing-sm);
	}
	
	.project-details span {
		background: var(--bg-primary);
		color: #1d96d5;
		font-size: var(--font-size-sm);
		padding: var(--spacing-xs) var(--spacing-sm);
		border-radius: var(--radius-sm);
		font-weight: 500;
	}
	
	.project-content .challenge,
	.project-content .results {
		margin-bottom: var(--spacing-lg);
	}
	
	.project-content .challenge:last-child,
	.project-content .results:last-child {
		margin-bottom: 0;
	}
	
	.project-content h4 {
		font-family: var(--font-headings);
		font-size: var(--font-size-md);
		font-weight: 600;
		color: #2566cf;
		margin: 0 0 var(--spacing-sm) 0;
	}
	
	.project-content p {
		font-size: var(--font-size-md);
		line-height: 1.6;
		color: var(--text-muted);
		margin: 0;
	}
	
	.results-list {
		list-style: none;
		padding: 0;
		margin: 0;
	}
	
	.results-list li {
		font-size: var(--font-size-md);
		line-height: 1.6;
		color: var(--text-muted);
		margin-bottom: var(--spacing-sm);
		padding-left: var(--spacing-lg);
		position: relative;
	}
	
	.results-list li::before {
		content: 'âœ“';
		position: absolute;
		left: 0;
		top: 0;
		color: #22c55e;
		font-weight: bold;
		font-size: var(--font-size-md);
	}
	
	.results-list li:last-child {
		margin-bottom: 0;
	}
	
	.projects-controls {
		text-align: center;
		margin-top: var(--spacing-xl);
	}
	
	/* Responsive Design */
	@media (max-width: 768px) {
		.projects {
			padding: var(--spacing-xl) 0;
		}
		
		.projects-intro {
			font-size: var(--font-size-md);
			margin-bottom: var(--spacing-2xl);
		}
		
		.projects-grid {
			grid-template-columns: 1fr;
			gap: var(--spacing-lg);
			margin-bottom: var(--spacing-2xl);
		}
		
		.project-card {
			padding: var(--spacing-lg);
		}
		
		.project-header {
			flex-direction: column;
			align-items: center;
			text-align: center;
			gap: var(--spacing-sm);
		}
		
		.project-meta h3 {
			font-size: var(--font-size-lg);
		}
		
		.project-details {
			justify-content: center;
		}
		
		.project-details span {
			font-size: var(--font-size-xs);
		}
	}
	
	@media (min-width: 769px) and (max-width: 1024px) {
		.projects-grid {
			grid-template-columns: repeat(2, 1fr);
		}
		
		.tech-categories {
			grid-template-columns: repeat(2, 1fr);
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const showMoreBtn = document.getElementById('showMoreBtn');
		const projectsGrid = document.getElementById('projectsGrid');
		
		if (!showMoreBtn || !projectsGrid) return;
		
		const hiddenProjects = projectsGrid.querySelectorAll('.project-card.hidden');
		const btnTextShow = showMoreBtn.querySelector('.btn-text-show') as HTMLElement;
		const btnTextHide = showMoreBtn.querySelector('.btn-text-hide') as HTMLElement;
		
		if (hiddenProjects.length === 0) {
			showMoreBtn.style.display = 'none';
			return;
		}
		
		if (!btnTextShow || !btnTextHide) return;
		
		let isExpanded = false;
		
		showMoreBtn.addEventListener('click', function() {
			isExpanded = !isExpanded;
			
			hiddenProjects.forEach(project => {
				if (isExpanded) {
					project.classList.remove('hidden');
				} else {
					project.classList.add('hidden');
				}
			});
			
			if (isExpanded) {
				btnTextShow.style.display = 'none';
				btnTextHide.style.display = 'inline';
			} else {
				btnTextShow.style.display = 'inline';
				btnTextHide.style.display = 'none';
			}
			
			// Smooth scroll to maintain position
			if (!isExpanded) {
				showMoreBtn.scrollIntoView({ behavior: 'smooth', block: 'center' });
			}
		});
	});
</script>