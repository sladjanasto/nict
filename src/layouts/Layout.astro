---
import { ViewTransitions } from 'astro:transitions';

export interface Props {
	title: string;
	description?: string;
	canonical?: string;
	ogImage?: string;
	lang?: string;
	noindex?: boolean;
}

const { 
	title, 
	description = "NICT - drop IT on us. Technology + Marketing + Cost Control = Measurable Business Outcomes",
	canonical = Astro.url.href,
	ogImage = "/og-image.jpg",
	lang = "en",
	noindex = false
} = Astro.props;

// Get domain from environment or fallback
const domain = import.meta.env.SITE || "https://yourdomainhere.com";
const siteName = "NICT";
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content={description} />
		
		{/* SEO Meta Tags */}
		<link rel="canonical" href={canonical} />
		{noindex && <meta name="robots" content="noindex, nofollow" />}
		{!noindex && <meta name="robots" content="index, follow" />}
		
		{/* Open Graph / Facebook */}
		<meta property="og:type" content="website" />
		<meta property="og:url" content={canonical} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={new URL(ogImage, domain).href} />
		<meta property="og:site_name" content={siteName} />
		<meta property="og:locale" content={lang === 'en' ? 'en_US' : 'de_DE'} />
		
		{/* Twitter */}
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonical} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={new URL(ogImage, domain).href} />
		
		{/* Favicon */}
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />
		
		{/* DNS Prefetch for external resources - early as possible */}
		<link rel="dns-prefetch" href="//fonts.googleapis.com" />
		<link rel="dns-prefetch" href="//fonts.gstatic.com" />
		<link rel="preconnect" href="https://fonts.googleapis.com" crossorigin />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		
		{/* Preload critical resources */}
		<link rel="preload" href="/hero-bg-pattern.svg" as="image" type="image/svg+xml" />
		
		{/* Google Fonts - optimized with display=swap */}
		<link
			href="https://fonts.googleapis.com/css2?family=Kavivanar&family=Poppins:ital,wght@0,300;0,400;0,600;0,700&family=Roboto:wght@300;400;500;600;700&display=swap"
			rel="stylesheet"
			crossorigin
		/>
		
		{/* Icomoon Icons Font - async load */}
		<link rel="preload" href="/icons/style.css" as="style" onload="this.onload=null;this.rel='stylesheet'" />
		<noscript><link rel="stylesheet" href="/icons/style.css" /></noscript>
		
		{/* Critical CSS inline - above the fold styles */}
		<style>
			/* Critical CSS for immediate render */
			body{margin:0;padding:0;font-family:var(--font-primary);background-color:var(--bg-primary);color:var(--text-dark);line-height:1.6;}
			.container{max-width:1200px;margin:0 auto;padding:0 2rem;}
			.hero{min-height:100vh;display:flex;align-items:center;background:linear-gradient(135deg,#1aeae2 0%,#2566cf 100%);}
			@media (max-width:768px){.container{padding:0 1.5rem;}}
		</style>
		{/* Structured Data */}
		<script type="application/ld+json">
		{
			JSON.stringify({
				"@context": "https://schema.org",
				"@type": "Organization",
				"name": siteName,
				"url": domain,
				"logo": new URL("/logo.svg", domain).href,
				"description": description,
				"contactPoint": {
					"@type": "ContactPoint",
					"contactType": "customer service",
					"availableLanguage": ["Serbian", "English", "German"]
				},
				"areaServed": "Worldwide",
				"serviceType": ["DevOps", "Cloud Migration", "AI Consulting", "IT Operations", "SEO Services"]
			})
		}
		</script>
		
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body>
		<slot />
		<script>
			// Service Worker Registration
			if ('serviceWorker' in navigator) {
				window.addEventListener('load', () => {
					navigator.serviceWorker.register('/sw.js')
						.then((registration) => {
							console.log('SW registered: ', registration);
						})
						.catch((registrationError) => {
							console.log('SW registration failed: ', registrationError);
						});
				});
			}

			// Dark theme toggle functionality
			const body = document.body;
			const savedTheme = localStorage.getItem('theme') || 'light';
			body.setAttribute('data-theme', savedTheme);
			
			function toggleTheme() {
				const currentTheme = body.getAttribute('data-theme');
				const newTheme = currentTheme === 'light' ? 'dark' : 'light';
				body.setAttribute('data-theme', newTheme);
				localStorage.setItem('theme', newTheme);
			}
			
			// Add theme toggle button event if it exists
			document.addEventListener('DOMContentLoaded', () => {
				const themeToggle = document.querySelector('.theme-toggle');
				if (themeToggle) {
					themeToggle.addEventListener('click', toggleTheme);
				}
			});
		</script>
	</body>
</html>

<style>
	/* Global Icomoon Icons Color Override */
	[class^="icon-"], 
	[class*=" icon-"],
	.icon {
		color: var(--primary-color) !important;
	}
	
	/* Dark Theme Variables */
	[data-theme="dark"] {
		--text-dark: #e0e6ed;
		--text-light: #a8b2bd;
		--text-white: #ffffff;
		--text-primary: #e0e6ed;
		--text-muted: #a8b2bd;
		
		--bg-primary: #1a1a1a;
		--bg-secondary: #2a2a2a;
		--bg-card: rgba(42, 42, 42, 0.95);
		--bg-white: #2a2a2a;
		--muted-background: #2a2a2a;
		--hero-bg: #1a1a1a;
		--hero-bg-image: url('/hero-bg-pattern-dark.svg');
		
		--border-color: #404040;
		--border-light: #333333;
		--card-border: rgba(255, 255, 255, 0.1);
		--divider-color: #404040;
		
		--shadow-sm: 0 1px 3px rgba(0,0,0,0.3);
		--shadow-md: 0 4px 6px rgba(0,0,0,0.3);
		--shadow-lg: 0 10px 25px rgba(0,0,0,0.4);
		--shadow-xl: 0 20px 40px rgba(0,0,0,0.5);
		
		/* Dark theme maintains current color scheme */
		--bg-gradient: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
		
		/* Status colors optimized for dark theme */
		--success-color: #34d399;
		--warning-color: #fbbf24;
		--error-color: #f87171;
		--info-color: #a78bfa;
		
		/* Social media colors for dark theme */
		--github-color: #ffffff;
	}
	
	:root {
		/* Default Color Scheme - Teal & Blue */
		--primary-color: #1aeae2;
		--secondary-color: #23577a;
		--gradient-mid-blue: #1d96d5;
		--accent-color: #ffd700;
		--text-dark: #333;
		--text-light: #5a6c7d;
		--text-white: #ffffff;
		
		/* Background Colors - Light Theme */
		--bg-primary: #ffffff;
		--bg-secondary: #f8f9fa;
		--bg-gradient: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
		--bg-card: rgba(255, 255, 255, 0.95);
		--hero-bg: #ffffff;
		--hero-bg-image: url('/hero-bg-pattern.svg');
		--gap: 0.5rem;
	}
	
	/* Color Scheme 1: Teal & Blue (Default) */
	[data-color-scheme="scheme-1"],
	:root {
		--primary-color: #1aeae2;
		--secondary-color: #23577a;
		--gradient-mid-blue: #1d96d5;
		--bg-gradient: linear-gradient(135deg, #1aeae2 0%, #2566cf 100%);
	}
	
	/* Color Scheme 2: Purple & Pink */
	[data-color-scheme="scheme-2"] {
		--primary-color: #a855f7;
		--secondary-color: #ec4899;
		--gradient-mid-blue: #c084fc;
		--bg-gradient: linear-gradient(135deg, #a855f7 0%, #ec4899 100%);
	}
	
	/* Color Scheme 3: Orange & Red */
	[data-color-scheme="scheme-3"] {
		--primary-color: #f97316;
		--secondary-color: #dc2626;
		--gradient-mid-blue: #ea580c;
		--bg-gradient: linear-gradient(135deg, #f97316 0%, #dc2626 100%);
	}
	
	:root {
		/* Spacing */
		--spacing-xs: 0.5rem;
		--spacing-sm: 1rem;
		--spacing-md: 1.5rem;
		--spacing-lg: 2rem;
		--spacing-xl: 3rem;
		--spacing-xxl: 4rem;
		
		/* Typography */
		--font-primary: 'Roboto', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		--font-headings: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		--font-accent: 'Kavivanar', cursive;
		--font-size-xs: 0.75rem;
		--font-size-sm: 0.875rem;
		--font-size-base: 1rem;
		--font-size-lg: 1.5rem;
		--font-size-xl: 1.25rem;
		--font-size-2xl: 1.5rem;
		--font-size-3xl: 2rem;
		--font-size-4xl: 3.5rem;
		
		/* Shadows */
		--shadow-sm: 0 1px 3px rgba(0,0,0,0.1);
		--shadow-md: 0 4px 6px rgba(0,0,0,0.1);
		--shadow-lg: 0 10px 25px rgba(0,0,0,0.15);
		--shadow-xl: 0 20px 40px rgba(0,0,0,0.2);
		
		/* Border Radius */
		--radius-sm: 4px;
		--radius-md: 8px;
		--radius-lg: 12px;
		--radius-xl: 16px;
		--radius-round: 50%;
		
		/* Transitions */
		--transition-fast: 0.15s ease;
		--transition-normal: 0.3s ease;
		--transition-slow: 0.5s ease;
		
		/* Container Sizes */
		--container-sm: 640px;
		--container-md: 768px;
		--container-lg: 1024px;
		--container-xl: 1200px;
		--container-2xl: 1400px;
		
		/* Responsive Breakpoints */
		--breakpoint-mobile: 768px;
		--breakpoint-tablet: 1024px;
		--breakpoint-desktop: 1440px;
		
		/* Responsive Font Sizes */
		--font-size-h1-mobile: 2rem;
		--font-size-h2-mobile: 1.5rem;
		--font-size-h3-mobile: 1.25rem;
		--font-size-h1-desktop: 3rem;
		--font-size-h2-desktop: 2.25rem;
		--font-size-h3-desktop: 1.875rem;
		
		/* Responsive Spacing */
		--spacing-mobile: 1rem;
		--spacing-tablet: 1.5rem;
		--spacing-desktop: 2rem;
		--spacing-3xl: 5rem;
		--spacing-4xl: 6rem;
		
		/* Additional Colors */
		--text-primary: #333333;
		--text-muted: #5a6c7d;
		--bg-white: #ffffff;
		--border-color: #e2e8f0;
		--border-light: #f1f5f9;
		
		/* Status Colors */
		--success-color: #22c55e;
		--warning-color: #f59e0b;
		--error-color: #ef4444;
		--info-color: #8b5cf6;
		
		/* Social Media Colors */
		--twitter-color: #1da1f2;
		--linkedin-color: #0077b5;
		--github-color: #333333;
		--email-color: var(--primary-color);
		
		/* Semantic Colors */
		--highlight-color: #ffd700;
		--muted-background: #f8f9fa;
		--card-border: rgba(0, 0, 0, 0.1);
		--divider-color: #e5e7eb;
	}
	
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
	
	/* Smooth language transition for all text content */
	h1, h2, h3, h4, h5, h6, p, span, a, div, li {
		transition: all 0.3s ease-in-out;
	}
	
	/* View Transitions customization */
	::view-transition-old(root),
	::view-transition-new(root) {
		animation-duration: 0.3s;
	}
	
	/* Keep header visible during transitions */
	::view-transition-old(site-header),
	::view-transition-new(site-header) {
		animation: none; /* Prevent header animation during transitions */
	}
	
	/* Keep dropdown visible during transitions */
	::view-transition-old(options-dropdown),
	::view-transition-new(options-dropdown) {
		animation: none;
	}
	
	/* Optimize hero section transitions to prevent SVG flicker */
	::view-transition-old(hero-section),
	::view-transition-new(hero-section) {
		animation-duration: 0.2s;
		animation-timing-function: ease-out;
	}
	
	/* Prevent background image reflow during transitions */
	.hero {
		contain: layout style paint;
	}
	
	/* Smooth transitions for hero elements */
	::view-transition-old(hero-title),
	::view-transition-new(hero-title) {
		animation-duration: 0.4s;
		animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}
	
	::view-transition-old(hero-description),
	::view-transition-new(hero-description) {
		animation-duration: 0.5s;
		animation-delay: 0.1s;
		animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}
	
	::view-transition-old(hero-promise),
	::view-transition-new(hero-promise) {
		animation-duration: 0.6s;
		animation-delay: 0.2s;
		animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}
	
	/* Smooth transition for content changes */
	.hero-question, .hero-answer, .promise-title, .hero-closing,
	.section-title, .promise-item span {
		transition: opacity 0.4s ease-in-out, transform 0.3s ease-in-out;
	}
	
	/* Fade effect during content change */
	.language-transition {
		opacity: 0.7;
		transform: translateY(-2px);
	}
	
	html {
		font-family: var(--font-primary);
		scroll-behavior: smooth;
	}

	/* Scroll Reveal Animations */
	.scroll-reveal,
	.service-card,
	.testimonial-card,
	.project-card,
	.about-content,
	.hero-content {
		opacity: 0;
		transform: translateY(30px);
		transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
		transition-property: opacity, transform;
	}

	.scroll-revealed {
		opacity: 1;
		transform: translateY(0);
	}

	/* Different animation variants */
	.fade-in-left {
		opacity: 0;
		transform: translateX(-30px);
		transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.fade-in-left.scroll-revealed {
		opacity: 1;
		transform: translateX(0);
	}

	.fade-in-right {
		opacity: 0;
		transform: translateX(30px);
		transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.fade-in-right.scroll-revealed {
		opacity: 1;
		transform: translateX(0);
	}

	.fade-in-up {
		opacity: 0;
		transform: translateY(50px);
		transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.fade-in-up.scroll-revealed {
		opacity: 1;
		transform: translateY(0);
	}

	.scale-in {
		opacity: 0;
		transform: scale(0.8);
		transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.scale-in.scroll-revealed {
		opacity: 1;
		transform: scale(1);
	}

	/* Disable animations for users who prefer reduced motion */
	@media (prefers-reduced-motion: reduce) {
		.scroll-reveal,
		.service-card,
		.testimonial-card,
		.project-card,
		.about-content,
		.hero-content,
		.fade-in-left,
		.fade-in-right,
		.fade-in-up,
		.scale-in {
			opacity: 1;
			transform: none;
			transition: none;
		}
	}
	
	body {
		background-color: var(--bg-primary);
		color: var(--text-dark);
		line-height: 1.6;
	}
	
	/* Text Selection Styling */
	::selection {
		background: var(--primary-color); /* Light teal with transparency */
		color: var(--text-dark);
	}
	
	::-moz-selection {
		background: var(--primary-color); /* Light teal with transparency for Firefox */
		color: var(--text-dark);
	}
	
	/* Dark theme text selection */
	[data-theme="dark"] ::selection {
		background: rgba(37, 102, 207, 0.4); /* Light blue with transparency */
		color: var(--text-white);
	}
	
	[data-theme="dark"] ::-moz-selection {
		background: rgba(37, 102, 207, 0.4); /* Light blue with transparency for Firefox */
		color: var(--text-white);
	}
	
	/* Headings with Poppins font */
	h1, h2, h3, h4, h5, h6 {
		font-family: var(--font-headings);
		font-weight: 600;
		line-height: 1.2;
	}
	
	h1 {
		font-size: var(--font-size-4xl);
		font-weight: 700;
	}
	
	h2 {
		font-size: var(--font-size-3xl);
		font-weight: 600;
	}
	
	h3 {
		font-size: var(--font-size-2xl);
		font-weight: 600;
	}
	
	.container {
		max-width: var(--container-xl);
		margin: 0 auto;
		padding: 0 var(--spacing-lg);
	}
	
	.section {
		padding: var(--spacing-xxl) 0;
	}
	
	@layer base, layout, components, typography, utilities;

	@layer typography {
		/* Section Titles - Glavni naslovi sekcija */
		:global(.section-title) {
			font-family: 'Poppins', var(--font-primary);
			font-size: var(--font-size-4xl);
			font-weight: 300;
			text-align: center;
			margin-top: 0;
			color: var(--secondary-color);
			position: relative;
			padding-bottom: var(--spacing-lg);
		}
		
		:global(.section-title::after) {
			content: '';
			position: absolute;
			bottom: -8px;
			left: 50%;
			transform: translateX(-50%);
			width: 80px;
			height: 1px;
			background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
			border-radius: 2px;
			transition: width var(--transition-normal);
		}
		
		/* Section Subtitles - Podnaslovi sekcija */
		:global(.section-subtitle) {
			font-family: 'Poppins', var(--font-primary);
			font-size: var(--font-size-xl);
			font-weight: 400;
			text-align: center;
			margin-top: 0;
			margin-bottom: var(--spacing-lg);
			color: var(--text-dark);
			position: relative;
		}
		
		:global(.section-subtitle::after) {
			content: '';
			position: absolute;
			bottom: -6px;
			left: 50%;
			transform: translateX(-50%);
			width: 50px;
			height: 1px;
			background: var(--primary-color);
			border-radius: 1px;
		}
		
		/* Packages Title - Specijalni naslov za packages */
		:global(.packages-title) {
			font-family: 'Poppins', var(--font-primary);
			font-size: var(--font-size-2xl);
			font-weight: 700;
			text-align: center;
			margin-bottom: var(--spacing-xl);
			color: var(--text-dark);
			position: relative;
		}
		
		:global(.packages-title::after) {
			content: '';
			position: absolute;
			bottom: -4px;
			left: 50%;
			transform: translateX(-50%);
			width: 40px;
			height: 1px;
			background: var(--secondary-color);
			border-radius: 1px;
		}
		
		/* Section Description - Opisi ispod naslova */
		:global(.section-description) {
			font-size: var(--font-size-lg);
			color: var(--text-light);
			text-align: center;
			max-width: 800px;
			margin: 0 auto var(--spacing-xl);
			line-height: 1.6;
			font-weight: 100;
		}
		
		/* Responsive Typography */
		@media (max-width: 768px) {
			:global(.section-title) {
				font-size: var(--font-size-2xl);
			}
			
			:global(.section-subtitle) {
				font-size: var(--font-size-lg);
			}
			
			:global(.packages-title) {
				font-size: var(--font-size-xl);
			}
			
			:global(.section-description) {
				font-size: var(--font-size-md);
				max-width: 90%;
			}
		}
	}

	@layer base {
	
	.btn {
		display: inline-flex;
		align-items: center;
		gap: var(--spacing-sm);
		padding: var(--spacing-sm) var(--spacing-xl);
		background: var(--bg-gradient);
		color: var(--text-white);
		text-decoration: none;
		border-radius: 25px;
		font-weight: 600;
		transition: transform var(--transition-normal), box-shadow var(--transition-normal);
	}
	
	.btn .icon {
		font-size: var(--font-size-md);
		line-height: 1;
	}
	
	.btn:hover {
		transform: translateY(-2px);
		box-shadow: var(--shadow-lg);
	}
	
	/* Underlined Link Buttons - Global Style */
	:global(.btn-link) {
		display: inline-flex !important;
		align-items: center;
		gap: var(--spacing-xs, 0.5rem);
		color: var(--primary-color, #1aeae2) !important;
		text-decoration: none;
		font-weight: 600;
		font-size: var(--font-size-base, 1rem) !important;
		position: relative;
		padding: var(--spacing-xs, 0.5rem) 0 !important;
		border: none !important;
		background: transparent !important;
		cursor: pointer;
		transition: all var(--transition-normal, 0.3s ease);
		width: auto !important;
	}
	
	:global(.btn-link::after) {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 2px;
		background: linear-gradient(135deg, var(--primary-color, #1aeae2) 0%, var(--secondary-color, #2566cf) 100%);
		transform: scaleX(1);
		transform-origin: left;
		transition: all var(--transition-normal, 0.3s ease);
	}
	
	:global(.btn-link:hover) {
		color: var(--secondary-color, #2566cf) !important;
		transform: translateY(-1px);
	}
	:global(.btn-link:focus-visible){
		outline:none;
	}

	/* Section Dividers - CSS Custom Properties for Easy Fine-Tuning */
	:root {
		--divider-height-mobile: 60px;
		--divider-height-desktop: 90px;
		--divider-opacity: 1;
		
		/* Mobile clip-path coordinates */
		--clip-top-left: 0%;
		--clip-top-right-mobile: 48.2%;
		--clip-bottom-mobile: 47.3%;
		
		/* Tablet coordinates */
		--clip-top-right-tablet: 47.9%;
		--clip-bottom-tablet: 46.4%;
		
		/* Desktop coordinates */
		--clip-top-right-desktop: 46.7%;
		--clip-bottom-desktop: 44.5%;
		
		/* Large desktop coordinates */
		--clip-top-right-large: 47.5%;
		--clip-bottom-large: 45.7%;
		
		/* Ultra-wide coordinates */
		--clip-top-right-ultra: 47.3%;
		--clip-bottom-ultra: 45.5%;
	}

	/* Section Dividers */
	:global(.section-divider) {
		height: var(--divider-height-mobile);
		position: relative;
		overflow: hidden;
		margin: 0;
		padding: 0;
		width: 100%;
		/* Smooth transition between breakpoints */
		transition: height 0.3s ease-in-out;
	}
	:global(.section-divider:nth-of-type(even)) {
		background: var(--bg-primary);
	}
	:global(.section-divider:nth-of-type(odd)) {
		background: var(--bg-secondary);
	}

	/* Triangle divider - Mobile First (320px-767px) */
	:global(.section-divider::before) {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width: 100%;
		height: 100%;
		background: white;
		/* Simple rectangle clip-path for all sizes */
		clip-path: polygon(0% 0%, 100% 0%, 100% 100%);
		opacity: 1;
		z-index: 1;
	}
	:global(.section-divider:nth-of-type(even):before) {
		background: var(--bg-secondary);

	}
	:global(.section-divider:nth-of-type(odd):before) {
		background: var(--bg-primary);

	}

	/* Small Mobile (320px-480px) */
	@media (max-width: 480px) {
		:global(.section-divider) {
			height: 50px;
		}
	}

	/* Large Mobile (481px-767px) */
	@media (min-width: 481px) and (max-width: 767px) {
		:global(.section-divider) {
			height: 70px;
		}
	}

	/* Tablet Portrait (768px-1023px) */
	@media (min-width: 768px) and (max-width: 1023px) {
		:global(.section-divider) {
			height: 80px;
		}
	}

	/* Desktop (1024px-1439px) */  
	@media (min-width: 1024px) {
		:global(.section-divider) {
			height: 90px;
		}
	}

	/* Large Desktop (1440px-1919px) */
	@media (min-width: 1440px) and (max-width: 1919px) {
		/* Height remains same as desktop */
	}

	/* Ultra-wide Screens (1920px+) */
	@media (min-width: 1920px) {
		:global(.section-divider) {
			height: 100px;
		}
	}

	/* 4K and above (2560px+) */
	@media (min-width: 2560px) {
		:global(.section-divider) {
			height: 120px;
		}
	}

	/* Alternative triangle pointing down - uncomment if needed */
	/*
	:global(.section-divider.down::before) {
		clip-path: polygon(0 100%, 50% 0, 100% 100%);
	}
	*/

	/* Alternative asymmetric triangle - uncomment if needed */
	/*
	:global(.section-divider.asymmetric::before) {
		clip-path: polygon(0 0, 100% 0, 70% 100%);
	}
	*/

	@media (max-width: 768px) {
		:global(.section-divider) {
			height: 60px;
		}
	}
	
	:global(.btn-link:hover::after) {
		transform: scaleX(1.05);
		background: linear-gradient(135deg, var(--secondary-color, #2566cf) 0%, var(--gradient-mid-blue, #1d96d5) 100%);
		height: 3px;
	}
	
	:global(.btn-link .icon),
	:global(.btn-link [class^="icon-"]) {
		font-size: var(--font-size-sm);
		transition: transform var(--transition-normal);
	}
	
	:global(.btn-link:hover .icon),
	:global(.btn-link:hover [class^="icon-"]) {
		transform: translateX(3px);
	}
	
	/* Variant with gradient text */
	:global(.btn-link-gradient) {
		color: var(--primary-color); /* Fallback color */
		background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
		background-clip: text;
		-webkit-background-clip: text;
		/* -webkit-text-fill-color: transparent; */
	}
	
	/* Fallback for browsers that don't support background-clip */
	@supports not (background-clip: text) {
		:global(.btn-link-gradient) {
			color: var(--primary-color) !important;
			-webkit-text-fill-color: initial;
		}
	}
	
	:global(.btn-link-gradient:hover) {
		background: linear-gradient(135deg, var(--secondary-color) 0%, var(--gradient-mid-blue) 100%);
		background-clip: text;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}
	
	:global(.btn-link-gradient::after) {
		background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
	}
	
	/* Ensure icons in gradient buttons are visible */
	:global(.btn-link-gradient .icon),
	:global(.btn-link-gradient [class^="icon-"]) {
		color: var(--primary-color) !important;
		-webkit-text-fill-color: var(--primary-color) !important;
	}
	
	/* Toggle Button Icon Animation */
	:global(.btn-link.expanded .icon) {
		transform: rotate(180deg);
	}
	
	:global(.btn-link .icon.icon-arrow-down),
	:global(.btn-link .icon.icon-arrow-up) {
		transition: transform var(--transition-normal);
	}
	
	.grid {
		display: grid;
		gap: var(--spacing-xl);
	}
	
	.grid-2 {
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	}
	
	.grid-3 {
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	}
	
	.grid-4 {
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
	}
	
	/* Tablet Styles */
	@media (min-width: 769px) and (max-width: 1024px) {
		body {
			font-size: 16px;
			line-height: 1.6;
		}
		
		.container {
			max-width: var(--container-lg);
			padding: 0 var(--spacing-tablet);
		}
	}
	
	@media (max-width: 768px) {
		:global(.section-title) {
			font-size: var(--font-size-3xl);
			font-weight: 300;
			margin-top: 0;
		}
		
		.container {
			padding: 0 var(--spacing-md);
		}
	}
</style>

<script>
	// Scroll Reveal Animation
	class ScrollReveal {
		observer: IntersectionObserver | null;
		
		constructor() {
			this.observer = null;
			this.init();
		}

		init() {
			// Create intersection observer
			this.observer = new IntersectionObserver(
				(entries) => {
					entries.forEach(entry => {
						if (entry.isIntersecting) {
							entry.target.classList.add('scroll-revealed');
							// Optional: Stop observing once revealed
							if (this.observer) {
								this.observer.unobserve(entry.target);
							}
						}
					});
				},
				{
					threshold: 0.1,
					rootMargin: '0px 0px -50px 0px'
				}
			);

			this.observeElements();
		}

		observeElements() {
			// Select elements to animate
			const elementsToReveal = document.querySelectorAll(
				'.scroll-reveal, .service-card, .testimonial-card, .project-card, .about-content, .hero-content'
			);

			elementsToReveal.forEach((element, index) => {
				if (element && (element as HTMLElement).style) {
					// Add delay based on index for stagger effect
					(element as HTMLElement).style.transitionDelay = `${index * 0.1}s`;
					if (this.observer) {
						this.observer.observe(element);
					}
				}
			});
		}
	}

	// Initialize when DOM is loaded
	document.addEventListener('DOMContentLoaded', () => {
		new ScrollReveal();
		initPackagesToggle();
	});

	// Handle page navigation (for SPAs or view transitions)
	document.addEventListener('astro:page-load', () => {
		new ScrollReveal();
		initPackagesToggle();
	});

	function initPackagesToggle() {
		const toggleBtn = document.getElementById('packagesToggle');
		const packagesSection = document.getElementById('packagesSection');
		
		if (!toggleBtn || !packagesSection) return;

		let isExpanded = false;

		toggleBtn.addEventListener('click', () => {
			isExpanded = !isExpanded;
			
			if (isExpanded) {
				packagesSection.classList.remove('packages-hidden');
				packagesSection.classList.add('packages-visible');
				toggleBtn.classList.add('expanded');
				
				// Smooth scroll to packages section after animation
				setTimeout(() => {
					packagesSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
				}, 300);
			} else {
				packagesSection.classList.remove('packages-visible');
				packagesSection.classList.add('packages-hidden');
				toggleBtn.classList.remove('expanded');
			}
		});
	}
</script>
